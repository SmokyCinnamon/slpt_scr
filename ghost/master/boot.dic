OnFirstBoot
{
	//If you add variables, make sure to initialize them here!
	//Note - I haven't added anything about username or pronouns here because it's all handled by the SSP prefs
	stroke = 0
	doorType = "nice"
	LastTalk = ""
	askToOpen = "in menu"
	currentDoor = ANY(niceDoors)
	doorIsOpen = 0
	passmin = 0
	currentColor = "None"
	aitalkinterval = 300
	hovering = 0
	hoverReact = "No"
	"\![bind,%(doorType),%(currentDoor),1]"; --
	
	"\1\s[-1]\0\s[0]Every time I open this door, it leads somewhere different.\x[noclear]\n\nSometimes I see people, but they never see me.\x[noclear]\n\n...I worry what will happen if I step through.\e"
}

OnInitialize
{
	//If you want some variables to reset on boot, put them here. This event will happen even if you add other events like OnGhostChanged
	//OnInitialize is a NOTIFY event! That means it cannot return scripts. This event is only meant for things like variable changes. See this page on Ukadoc for more info: https://ukagakadreamteam.github.io/ukadoc/manual/spec_shiori3.html
	
	//If you add new variables in updates, I recommend initializing them like so:
	//if !ISVAR("NewVariable"); NewVariable = 0
	//This means that it will only set the new variable if the user doesn't already have it, so that their variables don't get overwritten

	hovering = 0
	
	if RAND(100) + 1 <= 25 {
		doorType = "creepy"
		currentDoor = ANY(creepyDoors)
		doorIsOpen = 2
		}
	else {
		doorType = "nice"
		currentDoor = ANY(niceDoors)
		doorIsOpen = 0
	}
	passmin = 0
	"\![bind,creepy,,0]\![bind,nice,,0]"
	"\![bind,%(doorType),%(currentDoor),1]"
	//I REALLY SHOULD HAVE CALLED IT CREEPY OR WET LMAO
	if reference0 != "reload" //For things you want to reset EXCEPT when just reloading; a convenience for you the dev, basically
	{
		LastTalk = ""
	}
}

OnNotifyDressupInfo {
	_dressups = reference
	niceDoors = IARRAY
	creepyDoors = IARRAY
	doorColors = IARRAY
	//is it creepy or wet
	foreach _dressups; _element {
		_element = SPLIT(_element,"%(C_BYTE1)")
		
		if _element[1] == "nice"; niceDoors ,= _element[2]
		elseif _element[1] == "creepy"; creepyDoors ,= _element[2]
		elseif _element[1] == "door"; doorColors ,= _element[2]
		else; continue
	}
}

s0 {
	if doorIsOpen == 1; "\s[2]"
	elseif doorIsOpen == 2; "\s[1]"
	else; "\s[0]"
}

OnBoot {
	"\1\s[-1]\0\![bind,%(doorType),%(currentDoor),1]%(s0)"; --
}

OnClose
{
	if doorIsOpen == 2 {
		"\0\s[1]\w9\0\s[0]"
		doorIsOpen = 0
	}
	elseif doorIsOpen == 1 {
		"\0\s[2]\w9\0\s[1]\w9\0\s[0]"
		doorIsOpen = 0
	}
	--
	"\w9\0\s[0]I should really stay away..."
	--
	"\![bind,creepy,,0]\![bind,nice,,0]\x\-" //This is what makes the ghost close (after a short pause), do not remove the \- , and MAKE SURE you don't use a \e before this point or it won't work
}